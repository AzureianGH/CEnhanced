{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Build CHance (CMake, VS)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"if(!(Test-Path build)){New-Item -ItemType Directory -Path build | Out-Null}; cmake -S . -B build -G \"Visual Studio 17 2022\" -A x64; cmake --build build --config Release; ctest --test-dir build -C Release --output-on-failure"
			]
		},
		{
			"label": "Build CHance (CMake, NMake)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"if(!(Test-Path build)){New-Item -ItemType Directory -Path build | Out-Null}; cmake -S . -B build -G \"NMake Makefiles\"; cmake --build build --config Release; ctest --test-dir build -C Release --output-on-failure"
			]
		},
		{
			"label": "Rebuild CHance (CMake, MinGW-clean)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"if(Test-Path build){Remove-Item -Recurse -Force build}; cmake -S . -B build -G \"MinGW Makefiles\"; cmake --build build --config Release; ctest --test-dir build -C Release --output-on-failure"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build+Test via CMakePresets (mingw-release)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"cmake --list-presets; if(Test-Path build){Write-Host 'Leaving existing build dir(s)';}; cmake --preset mingw-release; cmake --build --preset mingw-release; ctest --preset mingw-release"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		}
	]
}