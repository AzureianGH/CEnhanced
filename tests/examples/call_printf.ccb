ccbytecode 2

.extern printf params=(ptr) returns=i32 varargs
.extern write params=(i32,ptr,i32) returns=i32
.extern read params=(i32,ptr,i32) returns=i32
.extern malloc params=(i32) returns=ptr
.extern free params=(ptr) returns=void
.extern exit params=(i32) returns=void
.extern test params=() returns=i32

.func printwrapper ret=i32 params=0 locals=0
  const_str "Hello, %s! Number: %d\n"
  const_str "CHance"
  const i32 42
  call printf i32 (ptr,ptr,i32)
  ret
.endfunc
.func main ret=i32 params=0 locals=18
.locals ptr i32 i32 ptr i8 i8 i8 ptr i16 ptr u8 i32 ptr ptr i32 i32 i32 i32
  const i32 128
  call malloc ptr (i32)
  store_local 0
  const i32 1
  const_str "What's your name? > "
  const i32 20
  call write i32 (i32,ptr,i32)
  drop i32
  const i32 0
  load_local 0
  const i32 127
  call read i32 (i32,ptr,i32)
  store_local 1
  call printwrapper i32 ()
  store_local 2
  const_str "Read %d bytes (printwrapper printed %d chars)\n"
  load_local 1
  load_local 2
  call printf i32 (ptr,i32,i32)
  drop i32
  load_local 0
  store_local 3
  load_local 1
  const i32 0
  compare gt i32
  const i32 0
  compare ne i32
  branch if_true0 if_false1
label if_true0
  load_local 3
  convert bitcast ptr i64
  load_local 1
  const i32 1
  binop sub i32
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  const i8 10
  compare eq i32
  const i32 0
  compare ne i32
  branch if_true3 if_end4
label if_true3
  load_local 3
  convert bitcast ptr i64
  load_local 1
  const i32 1
  binop sub i32
  store_local 1
  load_local 1
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  const i32 0
  convert trunc i32 i8
  store_local 4
  load_local 4
  store_indirect i8
label if_end4
  load_local 1
  const i32 0
  compare gt i32
  const i32 0
  compare ne i32
  branch land_rhs5 land_false6
label land_rhs5
  load_local 3
  convert bitcast ptr i64
  load_local 1
  const i32 1
  binop sub i32
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  const i8 13
  compare eq i32
  const i32 0
  compare ne i32
  branch land_true7 land_false6
label land_true7
  const i32 1
  jump land_end8
label land_false6
  const i32 0
label land_end8
  const i32 0
  compare ne i32
  branch if_true9 if_end10
label if_true9
  load_local 3
  convert bitcast ptr i64
  load_local 1
  const i32 1
  binop sub i32
  store_local 1
  load_local 1
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  const i32 0
  convert trunc i32 i8
  store_local 5
  load_local 5
  store_indirect i8
label if_end10
  jump if_end2
label if_false1
  const_str "No input read, using empty string\n"
  call printf i32 (ptr)
  drop i32
  load_local 3
  convert bitcast ptr i64
  const i32 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  const i32 0
  convert trunc i32 i8
  store_local 6
  load_local 6
  store_indirect i8
label if_end2
  const_str "Hello, %s!\n"
  load_local 3
  call printf i32 (ptr,ptr)
  drop i32
  const_str "String length: %d\n"
  load_local 3
  call strlen i32 (ptr)
  call printf i32 (ptr,i32)
  drop i32
  const_str "CHance"
  store_local 7
  load_local 3
  load_local 7
  call strcmp i32 (ptr,ptr)
  const i32 0
  compare eq i32
  const i32 0
  compare ne i32
  branch if_true11 if_false12
label if_true11
  const_str "You entered the secret name!\n"
  call printf i32 (ptr)
  drop i32
  jump if_end13
label if_false12
  const_str "You did not enter the secret name.\n"
  call printf i32 (ptr)
  drop i32
label if_end13
  const_str "Freeing memory...\n"
  call printf i32 (ptr)
  drop i32
  load_local 0
  call free void (ptr)
  call test_overflow i16 ()
  store_local 8
  const_str "Overflow test result (should be -25536): %d\n"
  load_local 8
  call printf i32 (ptr,i16)
  drop i32
  const_str "Calling test_chance(): %d\n"
  call RandomThing.test_chance i32 ()
  call printf i32 (ptr,i32)
  drop i32
  const_str "Calling extended C function test(): %d\n"
  call test i32 ()
  call printf i32 (ptr,i32)
  drop i32
  const_str "Multiplication test: 6 * 7 = %d\n"
  const i32 42
  call printf i32 (ptr,i32)
  drop i32
  const_str "Multiplication overflow test (200 * 200 = 64): %d\n"
  call test_mul_overflow u8 ()
  call printf i32 (ptr,u8)
  drop i32
  const_str "Test hex output: %d in hex is %x\n"
  const i32 255
  const i32 255
  call printf i32 (ptr,i32,i32)
  drop i32
  stack_alloc 5 8
  store_local 9
  load_local 9
  const i32 0
  store_indirect i32
  load_local 9
  convert bitcast ptr i64
  const i64 4
  binop add i64
  convert bitcast i64 ptr
  const u8 0
  store_indirect u8
  load_local 9
  convert bitcast ptr i64
  const i64 4
  binop add i64
  convert bitcast i64 ptr
  const u8 3
  store_local 10
  load_local 10
  store_indirect u8
  load_local 9
  const i32 44
  store_local 11
  load_local 11
  store_indirect i32
  stack_alloc 5 8
  store_local 12
  load_local 12
  const i32 0
  store_indirect i32
  load_local 12
  convert bitcast ptr i64
  const i64 4
  binop add i64
  convert bitcast i64 ptr
  const u8 0
  store_indirect u8
  load_local 12
  convert bitcast ptr i64
  const i64 4
  binop add i64
  convert bitcast i64 ptr
  const u8 123
  store_indirect u8
  load_local 12
  const i32 333
  store_indirect i32
  load_local 9
  store_local 13
  const i32 3
  store_local 14
  load_local 13
  const i32 45
  store_local 15
  load_local 15
  store_indirect i32
  load_local 13
  load_indirect i32
  const i32 45
  compare eq i32
  const i32 0
  compare ne i32
  branch lor_true14 lor_rhs15
label lor_rhs15
  load_local 12
  convert bitcast ptr i64
  const i64 4
  binop add i64
  convert bitcast i64 ptr
  load_indirect u8
  const i32 3
  compare eq u8 unsigned
  const i32 0
  compare ne i32
  branch lor_true14 lor_false16
label lor_true14
  const i32 1
  jump lor_end17
label lor_false16
  const i32 0
label lor_end17
  const i32 0
  compare ne i32
  branch if_true18 if_end19
label if_true18
  const_str "Logical OR worked!\n"
  call printf i32 (ptr)
  drop i32
label if_end19
  const i32 2
  store_local 16
  const_str "1 << 1 = %d\n"
  load_local 16
  call printf i32 (ptr,i32)
  drop i32
  const i32 2
  store_local 17
  const_str "4 >> 1 = %d\n"
  load_local 17
  call printf i32 (ptr,i32)
  drop i32
  const_str "typeof() = %s with sizeof() = %d\n"
  const_str "SmallTest::struct"
  const i32 5
  call printf i32 (ptr,ptr,i32)
  drop i32
  load_local 9
  load_indirect i32
  load_local 12
  convert bitcast ptr i64
  const i64 4
  binop add i64
  convert bitcast i64 ptr
  load_indirect u8
  convert zext u8 i32
  binop add i32
  ret
.endfunc
.func construct_thing ret=ptr params=0 locals=3
.locals ptr u8 i32
  stack_alloc 5 8
  store_local 0
  load_local 0
  const i32 0
  store_indirect i32
  load_local 0
  convert bitcast ptr i64
  const i64 4
  binop add i64
  convert bitcast i64 ptr
  const u8 0
  store_indirect u8
  load_local 0
  convert bitcast ptr i64
  const i64 4
  binop add i64
  convert bitcast i64 ptr
  const u8 5
  store_local 1
  load_local 1
  store_indirect u8
  load_local 0
  const i32 10
  store_local 2
  load_local 2
  store_indirect i32
  load_local 0
  ret
.endfunc
.func strlen ret=i32 params=1 locals=2
.params ptr
.locals i32 i32
  const i32 0
  store_local 0
label while_cond0
  load_param 0
  convert bitcast ptr i64
  load_local 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  const i32 0
  compare ne i32
  branch while_body1 while_end2
label while_body1
  load_local 0
  store_local 1
  load_local 0
  const i32 1
  binop add i32
  store_local 0
  jump while_cond0
label while_end2
  load_local 0
  ret
.endfunc
.func strcmp ret=i32 params=2 locals=2
.params ptr ptr
.locals i32 i32
  const i32 0
  store_local 0
label while_cond0
  load_param 0
  convert bitcast ptr i64
  load_local 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  const i32 0
  compare ne i32
  branch land_rhs3 land_false4
label land_rhs3
  load_param 1
  convert bitcast ptr i64
  load_local 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  const i32 0
  compare ne i32
  branch land_true5 land_false4
label land_true5
  const i32 1
  jump land_end6
label land_false4
  const i32 0
label land_end6
  const i32 0
  compare ne i32
  branch while_body1 while_end2
label while_body1
  load_param 0
  convert bitcast ptr i64
  load_local 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  load_param 1
  convert bitcast ptr i64
  load_local 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  compare ne i32
  const i32 0
  compare ne i32
  branch if_true7 if_end8
label if_true7
  load_param 0
  convert bitcast ptr i64
  load_local 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  load_param 1
  convert bitcast ptr i64
  load_local 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  binop sub i32
  ret
label if_end8
  load_local 0
  store_local 1
  load_local 0
  const i32 1
  binop add i32
  store_local 0
  jump while_cond0
label while_end2
  load_param 0
  convert bitcast ptr i64
  load_local 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  load_param 1
  convert bitcast ptr i64
  load_local 0
  convert sext i32 i64
  binop add i64
  convert bitcast i64 ptr
  load_indirect i8
  convert sext i8 i32
  binop sub i32
  ret
.endfunc
.func abort ret=void params=0 locals=0
  const i32 1
  call exit void (i32)
  ret void
.endfunc
.func test_overflow ret=i16 params=0 locals=2
.locals i16 i16
  const i16 30000
  store_local 0
  const i16 10000
  store_local 1
  load_local 0
  load_local 1
  binop add i16
  ret
.endfunc
.func test_mul_overflow ret=u8 params=0 locals=2
.locals u8 u8
  const u8 200
  store_local 0
  const u8 200
  store_local 1
  load_local 0
  load_local 1
  binop mul u8
  ret
.endfunc
